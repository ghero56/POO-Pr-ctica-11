datos
  flujo de datos para lectura
    fuente
  y escritura
    destino
  bytes:
    InputStream
    OutputStream
  caracteres:
    Reader
    Writer

todas las clases se encuentran en Java.io

File{
  puede crear:
    archivos
    carpetas

  Metodos:
    File() -> constructor recive el nombre del archivo a crear
    exists() -> existe o no un archivo/carpeta
    createNewFile() -> crea archivos
    mkdir() -> crea directorios
    delete() -> borra
    renameTo() ->
    list() ->

    /***no vistos***/
    isAbsolute()
    isDirectory()
    isFile()
    length()
    getName()
    getAbsolutePath()

  Ejemplo:[
    import java.io.File;
    import java.io.IOException;

    class Escribe{
      main(){
        try{
          File archivo = new File("nombre_archivo.txt");
          pl("Existe el archivo?" + archivo.exists());
          bool creado = archivo.CreateNewFile();
          pl("Se creo el archivo?" + creado);
          pl("Existe el archivo?" + archivo.exists());
        }catch(IOException e){
          // nada
        }
      }
    }
  ]
}

FileOutputStream{
  constructores:
    FileOutputStream(String nombre_archivo)
    FileOutputStream(String nombre_archivo, boolean a√±adir)
    FileOutputStream(File archivo)
  Ejemplo:[
    import java.io.FileOutputStream;
    import java.io.IOException;

    main(){
      FileOutputStream fos = null;
      Byte[] buffer = new Byte[81];
      int nBytes;
      try{

      }catch(IOException e){

      }finally{
        try{

        }catch(IOException e){
          
        }
      }
    }
  ]
}

FileInputStream{
  constructores:
    FileInputStream(String nombre_archivo)
    FileInputStream(File archivo)
}
